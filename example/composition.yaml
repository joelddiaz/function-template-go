apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: dynamo-with-bucket
spec:
  compositeTypeRef:
    apiVersion: database.example.com/v1alpha1
    kind: NoSQL
  mode: Pipeline
  pipeline:
  # This is a pretty standard composition converted to be run as a pipeline step
  - step: patch-and-trans
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources 
      resources:
        - name: s3Bucket
          base:
            apiVersion: s3.aws.upbound.io/v1beta1
            kind: Bucket
            metadata:
              name: crossplane-quickstart-bucket
            spec:
              forProvider:
                region: us-east-1
              providerConfigRef:
                name: default
          patches:
            - type: FromCompositeFieldPath
              fromFieldPath: "spec.location"
              toFieldPath: "spec.forProvider.region"
              transforms:
                - type: map
                  map: 
                    EU: "eu-north-1"
                    US: "us-east-1"
        - name: dynamoDB
          base:
            apiVersion: dynamodb.aws.upbound.io/v1beta1
            kind: Table
            metadata:
              name: crossplane-quickstart-database
            spec:
              forProvider:
                region: "us-east-1"
                writeCapacity: 1
                readCapacity: 1
                attribute:
                  - name: S3ID
                    type: S
                hashKey: S3ID
          patches:
            - type: FromCompositeFieldPath
              fromFieldPath: "spec.location"
              toFieldPath: "spec.forProvider.region"
              transforms:
                - type: map
                  map: 
                    EU: "eu-north-1"
                    US: "us-east-1"
  # here we call our crossplane function and pass our parameters
  - step: my-step
    functionRef:
      name: function-template-go
    input:
      extras:
        exampleFlag: ExtraBucket